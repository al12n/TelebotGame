import telebot
import random
from telebot import types
import config

bot = telebot.TeleBot(config.token)

user_data = {}  # –î–ª—è "–•–æ–ª–æ–¥–Ω–æ –≥–æ—Ä—è—á–æ"
suefa_mode = {}  # –î–ª—è –°—É–µ—Ñ–∞ (–∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞)

@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–•–æ–ª–æ–¥–Ω–æ –≥–æ—Ä—è—á–æ")
    btn2 = types.KeyboardButton("–°—É–µ—Ñ–∞")
    markup.add(btn1, btn2)

    bot.send_message(message.chat.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {message.from_user.first_name}! –í–æ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å? –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤ —Å—ã–≥—Ä–∞—Ç—å –≤ –°—É–µ—Ñ–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –°—É–µ—Ñ–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ä–∞—É–Ω–¥–∞', reply_markup=markup)


@bot.message_handler(func=lambda message: True)
def game(message):
    chat_id = message.chat.id
    text = message.text.lower()

    # ==== –•–û–õ–û–î–ù–û-–ì–û–†–Ø–ß–û ====
    if text == "—Ö–æ–ª–æ–¥–Ω–æ –≥–æ—Ä—è—á–æ":
        number = random.randint(1, 100)
        user_data[chat_id] = number
        bot.send_message(chat_id, '–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100! –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!')

    elif chat_id in user_data:
        try:
            guess = int(text)
            number = user_data[chat_id]

            if guess < number:
                bot.send_message(chat_id, "–ú–∞–ª–æ!")
            elif guess > number:
                bot.send_message(chat_id, "–ú–Ω–æ–≥–æ!")
            else:
                bot.send_message(chat_id, f"üéâ –£–≥–∞–¥–∞–ª! –≠—Ç–æ –±—ã–ª–æ {number}!")
                del user_data[chat_id]
        except ValueError:
            pass  # –ï—Å–ª–∏ –Ω–µ —á–∏—Å–ª–æ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –º–æ–∂–µ—Ç –∏–¥—ë—Ç –¥—Ä—É–≥–∞—è –∏–≥—Ä–∞

    # ==== –°–£–ï–§–ê ====
    if text == "—Å—É–µ—Ñ–∞":
        suefa_mode[chat_id] = True
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–º–µ–Ω—å")
        btn2 = types.KeyboardButton("–ù–æ–∂–Ω–∏—Ü—ã")
        btn3 = types.KeyboardButton("–ë—É–º–∞–≥–∞")
        markup.add(btn1, btn2, btn3)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏: –ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –ë—É–º–∞–≥–∞", reply_markup=markup)

    elif suefa_mode.get(chat_id):
        user_choice = text
        choices = ["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"]
        if user_choice not in choices:
            bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ —Ç–æ–ª—å–∫–æ –ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –ë—É–º–∞–≥–∞!")
            return

        bot_choice = random.choice(choices)

        result = ""
        if user_choice == bot_choice:
            result = "–ù–∏—á—å—è!"
        elif (user_choice == "–∫–∞–º–µ–Ω—å" and bot_choice == "–Ω–æ–∂–Ω–∏—Ü—ã") or \
             (user_choice == "–Ω–æ–∂–Ω–∏—Ü—ã" and bot_choice == "–±—É–º–∞–≥–∞") or \
             (user_choice == "–±—É–º–∞–≥–∞" and bot_choice == "–∫–∞–º–µ–Ω—å"):
            result = "–¢—ã –≤—ã–∏–≥—Ä–∞–ª! üéâ"
        else:
            result = "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª... üò¢"

        bot.send_message(chat_id, f"–¢—ã –≤—ã–±—Ä–∞–ª: {user_choice.capitalize()}\n"
                                  f"–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {bot_choice.capitalize()}\n"
                                  f"{result}")
        suefa_mode.pop(chat_id)

    # ==== –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ –∏–∑ –∏–≥—Ä ====
    elif chat_id not in user_data and not suefa_mode.get(chat_id):
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É: '–•–æ–ª–æ–¥–Ω–æ –≥–æ—Ä—è—á–æ' –∏–ª–∏ '–°—É–µ—Ñ–∞'.")


bot.infinity_polling()
